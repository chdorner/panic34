/*
 * Copyright (c) 2021 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define NAV_L 1
#define SYM_L 2
#define NUM_L 3
#define OTH_L 4

#define LOCK LG(LC(Q))
#define ZMUTE LG(LA(LC(LS(A))))
#define SCRNSHT LG(LS(N4))

#define COMBO(NAME, BINDINGS, KEYPOS) \
  combo_##NAME { \
    timeout-ms = <50>; \
    bindings = <BINDINGS>; \
    key-positions = <KEYPOS>; \
  };

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
&lt {
    tapping-term-ms = <240>;
    quick-tap-ms = <200>;
};

&caps_word {
    continue-list = <UNDERSCORE MINUS>;
};

/ {
    combos {
        compatible = "zmk,combos";

        // ( on l and n
        COMBO(lpar, &kp LPAR, 6 16)
        // ) on u and e
        COMBO(rpar, &kp RPAR, 7 17)
        // { on n and m
        COMBO(lbrc, &kp LBRC, 16 26)
        // } on e and ,
        COMBO(rbrc, &kp RBRC, 17 27)
        // [ on y and i
        COMBO(lbkt, &kp LBKT, 8 18)
        // ] on ; and o
        COMBO(rbkt, &kp RBKT, 9 19)
        // - on p and l
        COMBO(minus, &kp MINUS, 3 6)
        // _ on v and m
        COMBO(under, &kp UNDER, 23 26)
        // ESC on a and o
        COMBO(esc, &kp ESC, 10 19)
        // TAB on h and n
        COMBO(tab, &kp TAB, 15 16)
        // caps_word on z and '
        COMBO(caps_word, &caps_word, 20 29)
        // both left thumb keys
        COMBO(other_sl, &sl OTH_L, 30 31)
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow mods";
            #binding-cells = <2>;
            tapping-term-ms = <240>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        quexmark: question_exclamation_mark {
            compatible = "zmk,behavior-mod-morph";
            label = "QMARK_EXCL";
            #binding-cells = <0>;
            bindings = <&kp QMARK>, <&kp EXCL>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        bspcdel: backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            label = "BSPC_DEL";
            #binding-cells = <0>;
            bindings = <&kp BSPC>, <&kp DEL>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        lt_bspc: layer_tap_backspace_delete {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_BD";
            #binding-cells = <2>;
            tapping-term-ms = <240>;
            quick-tap-ms = <200>;
            flavor = "balanced";
            bindings = <&mo>, <&bspcdel>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "Base";
            bindings = <
                &kp Q      &kp W      &kp F       &kp P            &kp G              &kp J          &kp L          &kp U         &kp Y       &kp SEMI
                &hm LGUI A &hm LALT R &hm LCTRL S &hm LSHFT T      &kp D              &kp H          &hm RSHFT N    &hm RCTRL E   &hm LALT I  &hm LGUI O
                &kp Z      &kp X      &kp C       &kp V            &kp B              &kp K          &kp M          &kp COMMA     &kp DOT     &kp SQT
                                                  &lt NAV_L SPACE  &lt_bspc SYM_L 0   &kp TAB  &lt NUM_L RET
            >;
        };

        nav_layer {
            label = "Nav";
            bindings = <
                &trans     &trans     &trans      &trans           &trans         &kp LG(GRAVE)  &kp LG(LBRC)   &kp LG(RBRC)  &trans      &trans
                &kp LGUI   &kp LALT   &kp LCTRL   &kp LSHFT        &trans         &kp LARW       &kp DARW       &kp UARW      &kp RARW    &trans
                &trans     &trans     &trans      &trans           &trans         &kp HOME       &kp PG_DN      &kp PG_UP     &kp END     &trans
                                                  &trans           &kp BSPC       &kp TAB        &kp RET
            >;
        };

        sym_layer {
            label = "Sym";
            bindings = <
                &trans     &trans     &trans      &trans           &trans         &kp PLUS       &kp EQUAL      &kp AMPS      &kp ASTRK   &kp PRCNT
                &kp LGUI   &kp LALT   &kp LCTRL   &kp LSHFT        &trans         &kp TILDE      &quexmark      &kp HASH      &kp GRAVE   &kp FSLH
                &trans     &trans     &trans      &trans           &trans         &kp DOLLAR     &kp AT         &kp BSLH      &kp PIPE    &kp CARET
                                                  &kp SPACE        &trans         &kp TAB        &kp RET
            >;
        };

        num_layer {
            label = "Num";
            bindings = <
                &trans     &kp N7     &kp N8      &kp N9           &kp EQUAL      &trans         &trans         &trans        &trans      &trans
                &kp N0     &kp N4     &kp N5      &kp N6           &kp MINUS      &trans         &kp RSHFT      &kp RCTRL     &kp LALT    &kp LGUI
                &kp DOT    &kp N1     &kp N2      &kp N3           &trans         &trans         &trans         &trans        &trans      &trans
                                                  &kp SPACE        &kp BSPC       &trans         &kp RET
            >;
        };

        bt_layer {
            label = "Other";
            bindings = <
                &kp LOCK   &trans     &trans      &trans           &kp ZMUTE      &trans         &trans         &trans        &trans       &bt BT_CLR
                &trans     &trans     &kp SCRNSHT &trans           &trans         &trans         &trans         &trans        &trans       &trans
                &trans     &trans     &trans      &trans           &trans         &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2  &bt BT_SEL 3 &bt BT_SEL 4
                                                  &trans           &trans         &trans         &trans
            >;
        };
    };
};
