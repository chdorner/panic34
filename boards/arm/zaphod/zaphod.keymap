/*
 * Copyright (c) 2021 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define NAV_L 1
#define SYM_L 2
#define NUM_L 3

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
&lt { quick_tap_ms = <200>; };

/ {
    combos {
        compatible = "zmk,combos";

        //med_mo {
	    //timeout-ms = <50>;
        //    key-positions = <30 31>;
        //    bindings = <&mo MED_L>;
        //};

        //fn_mo {
	    //timeout-ms = <50>;
        //    key-positions = <32 33>;
        //    bindings = <&mo FUN_L>;
        //};

    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow mods";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        quexmark: question_exclamation_mark {
            compatible = "zmk,behavior-mod-morph";
            label = "QMARK_EXCL";
            #binding-cells = <0>;
            bindings = <&kp QMARK>, <&kp EXCL>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "Base";
            bindings = <
                &kp Q      &kp W      &kp F       &kp P            &kp G          &kp J          &kp L          &kp U         &kp Y       &kp SEMI
                &hm LGUI A &hm LALT R &hm LCTRL S &hm LSHFT T      &kp D          &kp H          &hm RSHFT N    &hm RCTRL E   &hm LALT I  &hm LGUI O
                &kp Z      &kp X      &kp C       &kp V            &kp B          &kp K          &kp M          &kp COMMA     &kp DOT     &kp SQT
                                                  &lt NAV_L SPACE  &lt SYM_L BSPC &lt NUM_L TAB  &kp RET
            >;
        };

        nav_layer {
            label = "Nav";
            bindings = <
                &trans     &trans     &trans      &trans           &trans         &kp LG(GRAVE)  &kp LG(LBRC)   &kp LG(RBRC)  &trans      &trans
                &kp LGUI   &kp LALT   &kp LCTRL   &kp LSHFT        &trans         &kp LARW       &kp DARW       &kp UARW      &kp RARW    &trans
                &trans     &trans     &trans      &trans           &trans         &kp HOME       &kp PG_DN      &kp PG_UP     &kp END     &trans
                                                  &trans           &kp BSPC       &kp TAB        &kp RET
            >;
        };

        sym_layer {
            label = "Sym";
            bindings = <
                &trans     &trans     &trans      &trans           &trans         &kp PLUS       &kp EQUAL      &kp AMPS      &kp ASTRK   &kp PRCNT
                &kp LGUI   &kp LALT   &kp LCTRL   &kp LSHFT        &trans         &kp TILDE      &quexmark      &kp HASH      &kp GRAVE   &kp FSLH
                &trans     &trans     &trans      &trans           &trans         &kp DOLLAR     &kp AT         &kp BSLH      &kp PIPE    &kp CARET
                                                  &kp SPACE        &trans         &kp TAB        &kp RET
            >;
        };

        num_layer {
            label = "Num";
            bindings = <
                &trans     &kp N7     &kp N8      &kp N9           &kp EQUAL      &trans         &trans         &trans        &trans      &trans
                &kp N0     &kp N4     &kp N5      &kp N6           &kp MINUS      &trans         &kp RSHFT      &kp RCTRL     &kp LALT    &kp LGUI
                &kp DOT    &kp N1     &kp N2      &kp N3           &trans         &trans         &trans         &trans        &trans      &trans
                                                  &kp SPACE        &kp BSPC       &trans         &kp RET
            >;
        };
    };
};
